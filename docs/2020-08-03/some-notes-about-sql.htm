<!DOCYPE html>
<html>
<head>
<title>Заметки об определении схемы</title>
</head>
<body>
<h1>Заметки об определении схемы</h1>
Полная спецификация языка SQL длинная, а иногда <sup>(когда?)</sup> хотелось бы иметь под руками её короткий вариант.
<br />
Это может понадобиться, например если есть какая-то утилита, которая понимает только подмножество языка.
<br />
Или, наличие подобной спецификации может пригодиться для того чтобы понять или объяснить некоторый скрипт, в котором используется именно это подмножество языка.
<br />
<br />
Способ получения подмножества языка SQL:
<br />
берём текст стандарта SQL-2013 (потому что более свежий 2016 надо покупать, а мы ещё столько не зарабатываем)
<br />
Создание таблиц описывается в стандарте <a href="https://en.wikipedia.org/wiki/ISO/IEC_9075">ISO/IEC 9075</a>-2 (т.е. 2-ой части)
<br />
а создание индексов не описывается!
<br />
<a href="https://en.wikibooks.org/wiki/Structured_Query_Language/Managing_Indexes">"the CREATE INDEX statement is not part of the SQL standard!"</a>
<br />
выписываем описание тех частей языка, которые будут использоваться.
Аккуратно убираем лишнее
(аккуратно, это значит, что каждый такой случай сокращения должен быть записан в список изменений).
<br />
Проверяем грамматику полученные на корректность, если есть такая возможность. У меня такая возможность есть только гипотетически, практически я это проделать не могу.
<br />
<br />
В результате этой работы должны получиться:
<br />
1) текст сокращённой грамматики (возможно с отсылками к исходной грамматике)
<br />
2) заметки об изменениях грамматики
<br />
(список пояснений об изменениях)
<br />
3) прочие комментарии, пояснения, примеры (этот текст)


<h2>Текст грамматики</h2>
 <font color="darkgray">(сокращённой в части описания таблиц и расширенной добавлением описания индексов)</font>
<br />
<br />



<strong>&lt;<a name="table-definition">table definition</a>&gt;</strong>
::= CREATE TABLE 
<a href="#table-name">&lt;table name&gt;</a> 
<a href="#left-paren">&lt;left paren&gt;</a> 
<a href="#column-definition">&lt;column definition&gt;</a> 
[ { <a href="#comma">&lt;comma&gt;</a> <a href="#column-definition">&lt;column definition&gt;</a> }... ] 
<a href="#right-paren">&lt;right paren&gt;</a>
<br />
<br />




<strong>&lt;<a name="column-definition">column definition</a>&gt;</strong>
::=
<a href="#column-name">&lt;column name&gt;</a>
[ 
<a href="#predefined-type">&lt;predefined type&gt;</a>
]
[ <a href="#identity-column-specification">&lt;identity column specification&gt;</a> ]
[ <a href="#column-constraint-definition">&lt;column constraint definition&gt;</a> ... ]
<br />
<br />

<!-- Оригинальное определение:
<identity column specification> ::=
GENERATED { ALWAYS | BY DEFAULT } AS IDENTITY
[ <left paren> <common sequence generator options> <right paren> ]
-->
<strong>&lt;<a name="identity-column-specification">identity column specification</a>&gt;</strong>
::= GENERATED BY DEFAULT AS IDENTITY
<br />
<br />

<!--
&lt;generation clause&gt; ::= GENERATED ALWAYS AS &lt;left paren&gt; &lt;common value expression&gt; &lt;right paren&gt;
<br />
<br />
-->

<strong>&lt;<a name="column-constraint-definition">column constraint definition</a>&gt;</strong>
::=
NOT NULL
| <a href="#unique-specification">&lt;unique specification&gt;</a>
| <a href="#references-specification">&lt;references specification&gt;</a>
<br />
<br />


<strong>&lt;<a name="references-specification">references specification</a>&gt;</strong>
::= REFERENCES 
<a href="#table-name">&lt;table name&gt;</a> 
[
<a href="#left-paren">&lt;left paren&gt;</a> 
<a href="#column-name">&lt;column name&gt;</a>
<a href="#right-paren">&lt;right paren&gt;</a>
]
<br />
<br />


<strong>&lt;<a name="unique-specification">unique specification</a>&gt;</strong>
::=
UNIQUE
| PRIMARY KEY
<br />
<font color="darkgray">(primary key подразумевает UNIQUE + NOT NULL, и возможно CLUSTERED INDEX )</font>
<br />
<br />

<strong>&lt;<a name="predefined-type">predefined type</a>&gt;</strong>
::=
BOOLEAN
|
<a href="#exact-numeric-type">&lt;exact numeric type&gt;</a>
|
<a href="#datetime-type">&lt;datetime type&gt;</a>
|
<a href="#character-string-type">&lt;character string type&gt;</a>
<br />
<br />


<strong>&lt;<a name="exact-numeric-type">exact numeric type</a>&gt;</strong>
::=
INT
|
INTEGER
<br />
<br />
<strong>&lt;<a name="datetime-type">datetime type</a>&gt;</strong>
::=
TIMESTAMP
<br />
<br />

<strong>&lt;<a name="character-string-type">character string type</a>&gt;</strong>
::= NCLOB
<br />
<font color="darkgray">(NCLOB is equivalent to NATIONAL CHARACTER LARGE OBJECT)</font>
<br />
<br />



<strong>&lt;<a name="index-definition">index definition</a>&gt;</strong>
::=
CREATE [UNIQUE] INDEX 
<a href="#index-name">&lt;index name&gt;</a>
ON 
<a href="#table-name">&lt;table name&gt;</a>
<a href="#left-paren">&lt;left paren&gt;</a> 
<a href="#column-name">&lt;column name&gt;</a>
[
{<a href="#comma">&lt;comma&gt;</a>
<a href="#column-name">&lt;column name&gt;</a>}...
 ]
 <a href="#right-paren">&lt;right paren&gt;</a>
<br />
<br />


<strong>&lt;<a name="table-name">table name&gt;</a></strong>
::=
<a href="#identifier">&lt;identifier&gt;</a>
<br />
<br />


<strong>&lt;<a name="index-name">index name&gt;</a></strong>
::=
<a href="#identifier">&lt;identifier&gt;</a>
<br />
<br />
<!--
<strong>&lt;<a name="column-name-list">column name list</a>&gt;</strong>
::=
<a href="#column-name">&lt;column name&gt;</a>
[ { 
<a href="#comma">&lt;comma&gt;</a>
 <a href="#column-name">&lt;column name&gt;</a>
 }... ]
<br />
<br />
-->

<strong>&lt;<a name="column-name">column name</a>&gt;</strong>
::=
<a href="#identifier">&lt;identifier&gt;</a>
<br />
<br />
<strong>&lt;<a name="identifier">identifier</a>&gt;</strong>
::= !! надо читать <a href="#about-names">комментарий про имена́</a>
<br />
<br />
<strong>&lt;<a name="left-paren">left paren</a>&gt;</strong>
::= (
<br />
<br />
<strong>&lt;<a name="right-paren">right paren</a>&gt;</strong>
::= )
<br />
<br />
<strong>&lt;<a name="comma">comma</a>&gt;</strong>
::= ,

<h2>Заметки об изменениях грамматики</h2>
В правиле <a href="#table-definition">&lt;table definition&gt;</a>  сразу сделана замена &lt;table element&gt; ::= <a href="#column-definition">&lt;column definition&gt;</a>.
Результатом этого будет невозможность описывать дополнительные ограничения на таблицу
(но вроде бы для моей простой задачи это пока и не нужно)
<br />
<br />
В правиле <a href="#column-definition">&lt;column definition&gt;</a> удалена часть &lt;constraint characteristics&gt;
<br />
(просто не нужно пока́)
<br />
<br />
В правиле <a href="#column-constraint-definition">&lt;column constraint definition&gt;</a> удалена часть "| &lt;check constraint definition&gt;".
<br />
(Теперь нельзя делать проверки, отличные от NOT NULL, UNIQUE и REFERENCES)
<br />
<br />
В правиле <a href="#table-name">&lt;table name&gt;</a> сделана замена &lt;local or schema qualified name&gt; ::= &lt;<a href="#identifier">identifier</a>&gt;
<br />
(теперь нельзя указывать схему таблицы, только "плоские" имена)
<br />
<br />
В правиле <a href="#column-definition">&lt;column definition&gt;</a> сделана замена &lt;column constraint definition&gt; ::= &lt;column constraint&gt; [ &lt;constraint characteristics&gt; ]
<br />
(то есть, ограничениям нельзя приписывать имена)
<br />
<br />
В правиле <a href="#identifier">&lt;identifier&gt;</a> сделана замена сразу на неформальное описание.

<h3><a name="about-names">Комментарий про имена́</a></h3>
Пробелы в именах - нельзя!
<br />
<br />
Но если очень хочется, то
<br />
"the identifiers that do not comply with these rules must be delimited by double quotation marks"
<br />
Double quotation marks can be used only to delimit identifiers. They cannot be used to delimit character strings.
<br />
Single quotation marks must be used to enclose character strings. They cannot be used to delimit identifiers.
<br />
<br />
Escaping should be for the edge cases. But the same developers that write conforming C# identifiers
don't mind escaping every single identifier in their SQL, writing terribly ugly SQL "code".
<br />
<a href="https://stackoverflow.com/a/23049024">https://stackoverflow.com/a/23049024</a>

<h3>Проблемы с CLOB</h3>
The clob data type is unsupported in Postgres.
<br />
However, it can be easily defined as a synonym to the text type:
<br />
create domain clob as text;
<br />
<a href="https://stackoverflow.com/a/49964770">https://stackoverflow.com/a/49964770</a>
<br />
In PostgreSQL, you can actually store relatively short strings in TEXT columns and then use them in GROUP BY and ORDER BY
<br />
In Oracle, you can use CLOB in string functions, but you cannot use them in GROUP BY and ORDER BY
<br />
<a href="http://www.sqlines.com/postgresql/datatypes/text">http://www.sqlines.com/postgresql/datatypes/text</a>

<h2>Итоговые замечания</h2>

Этот синтаксис позволит определить схему БД,
<br />
но не позволит заполнить справочники и стартовые данные по-умолчанию
<br />
для работы с данными нужно ещё описание команд (операторов?) INSERT, SELECT и UPDATE
<br />
и наверное это нужно сделать, потому что как иначе описать обновление таблицы со списком "миграций"?

</body>
</html>